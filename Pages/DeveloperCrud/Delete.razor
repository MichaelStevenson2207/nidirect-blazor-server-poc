@page "/developer/delete/{Id}"
@using edd_blazor_server_poc.Data
@inject Controllers.DeveloperService developerService
@inject NavigationManager NavigationManager

<form>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            

            <h1 class="govuk-heading-l">Delete developer</h1>

            <p class="govuk-body">Are you sure want to delete this developer?</p>
            <div class="govuk-form-group">
                <label class="govuk-label" for="FirstName">First name</label>
                <label class="govuk-label" id="FirstName">@obj.FirstName</label>
            </div>
            <div class="govuk-form-group">
                <label class="govuk-label">Last name</label>
                <label class="govuk-label">@obj.LastName</label>
            </div>
            <div class="govuk-form-group">
                <label class="govuk-label">Preferred language</label>
                <label class="govuk-label">@obj.PreferredLanguage</label>
            </div>
            <div class="govuk-form-group">
                <label class="govuk-label">Experience</label>
                <label class="govuk-label">@obj.Experience.ToString("0")</label>
            </div>

            <div class="govuk-form-group">
                <input type="button" class="govuk-button govuk-button--warning" @onclick="@DeleteDev" value="Delete"/>
                <input type="button" class="govuk-button govuk-button--secondary" @onclick="@Cancel" value="Cancel"/>
            </div>

        </div>
    </div>
</form>

@code {
    [Parameter]
    public string Id { get; set; }
    Developer obj = new Developer();
    protected override async Task OnInitializedAsync()
    {
        obj = await Task.Run(() => developerService.GetDeveloperAsync(Convert.ToInt32(Id)));
    }
    protected async void DeleteDev()
    {
        await developerService.DeleteDeveloperAsync(obj);
        NavigationManager.NavigateTo("/");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}